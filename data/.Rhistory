2* 28 + 151
2 * 95 + 238
count_df
rownames(count_df) <- c("controls", "cases")
count_df
t(count_df)
count_df <- t(count_df)
count_df <- count_df[, c("cases", "controls")]
count_df
2 * 95 + 238
apply(count_df, 1, sum)
apply(count_df, 2, sum)
sum(apply(count_df, 1, sum))
779/2000 * 1000
chisq.test(count_df)
chisq.test(count_df, correct = F)
test <- chisq.test(count_df, correct = F)
summary(test)
test$expected
apply(test$expected, 1, sum)
summary(test)
test$residuals
summary(test)
chi <- function(exp, obs) {
return((exp - obs) ^ 2 / exp)
}
exp_df <- test$expected
count_df - exp_df
(exp_df - obs_df)^2 /exp_df
(exp_df - count_df)^2 /exp_df
(exp_df - count_df)
(exp_df - count_df)^2
(exp_df - count_df)^2 / exp_df
chi_df <- (exp_df - count_df)^2 / exp_df
chi_df
apply(chi_df, 1, sum)
apply(chi_df, 2, sum)
chi_df
sum(chi_df)
test$residuals
test
count_df
167 * 2 + 238
chi_df
count_df
exp_df
count_df - exp_df
count_df
exp_df
610.5 - 428
count_df
count_df[1, ] / count_df[2, ]
count_df[1, ] / count_df[2, ]
odds_df <- count_df[1, ] / count_df[2, ]
odds_df
odds_df$cases / odds_df$controls
odds_df$cases
odds_df
odds_df["cases"]
odds_df["cases"] / odds_df["controls"]
1.34 /0.26
1.336 /0.26
1.336 /0.261
sqrt(1/572 + 1/207 + 1/428 + 1/793)
odds_df["cases"] / odds_df["controls"]
OR <- odds_df["cases"] / odds_df["controls"]
LOR <- log(OR)
LOR
SE <- sqrt(1/572 + 1/207 + 1/428 + 1/793)
LOR + 1.96 * SE
LOR - 1.96 * SE
5.12 +- 1.96 * 0.10
5.12 + 1.96 * 0.10
OR
ln(5.12) + 1.96 * 0.1
log(5.12) + 1.96 * 0.1
log(e)
log(e1)
log(1e1)
log(1e)
log(1e1)
?log
LOR - 1.96 * SE
exp(LOR - 1.96 * SE)
exp(LOR + 1.96 * SE)
exp(1)
exp(1.83)
exp(1.4)
exp(1.44)
?t.test
pnorm
pnorm(1, mean = LOR, sd = SE)
pnorm(1, mean = LOR, sd = SE)
pt(1, mean = LOR, sd = SE)
?pt
count_df
count_df$controls / sum(count_df$controls)
count_df
count_df$controls
class(count_df)
count_df$controls / sum(count_df$controls)
count_df[, "controls"] / sum(count_df[, "controls"])
count_df
count_df[, "controls"] / sum(count_df[, "controls"])
count_df
df
TT_freq <- 0.207 ^ 2
TT_freq
TG_freq <- 2 * 0.207 * 0.793
GG_freq <- 0.793 ^ 2
GG_freq
0.793 * 0.793
df
count_df
df
0.793 * 0.793
TT_freq * 1000
count_df
TG_freq * 1000
GG_freq * 1000
obs <- c(28, 151, 321)
exp <- c(TT_freq, TG_freq, GG_freq) * 1000
exp
exp - obs
(exp - obs)^2 / exp
TT_freq
(exp - obs)^2 / exp
(exp - obs)^2 / exp
sum((exp - obs)^2 / exp)
exp
321 - 628.849
(321 - 628.849)^2 / 321
(321 - 628.849)^2 / 628.849
sum((exp - obs)^2 / exp)
chi_sq <- sum((exp - obs)^2 / exp)
pchisq(chi_sq, df=2, lower.tail=FALSE)
TT_freq <- 0.207 ^ 2
chi_sq <- sum((exp - obs)^2 / exp)
chi_sq
pchisq(chi_sq, df=2, lower.tail=FALSE)
count_df
df
sum(df[1, ])
exp <- c(TT_freq, TG_freq, GG_freq) * sum(obs)
obs <- c(28, 151, 321)
exp <- c(TT_freq, TG_freq, GG_freq) * sum(obs)
chi_sq <- sum((exp - obs)^2 / exp)
pchisq(chi_sq, df=2, lower.tail=FALSE)
chi_Sq
chi_sq
exp
chi_sq
chis <- (exp - obs)^2 / exp
chis <- (exp - obs)^2 / exp
chi_sq <- sum(chis)
chis
chi_sq
pchisq(chi_sq, df=2, lower.tail=FALSE)
exp(LOR + 1.96 * SE)
exp(LOR - 1.96 * SE)
pchisq(686, 1)
pchisq(686, 1, lower.tail = F)
0.4 / 100
84/1400 / 0.004
814 * 2 + 172
(814 * 2 + 172) / 2000
(760 * 2 + 215) / 2000
(25 * 2  + 215) / 2000
(14 * 2  + 172) / 2000
0.9 ^ 2 * 1000
0.9 * 0.1 * 1000
2 * 0.9 * 0.1 * 1000
0.1 * 0.1 * 1000
(65 - 63) ^ 2 / 63
# Control 1
obs <- c(814, 172, 14)
exp <- c(810, 180, 10)
sum(exp)
exp - obs
(exp - obs) ^ 2
(exp - obs) ^ 2 / exp
exp
chi <- (exp - obs) ^ 2 / exp
chi_final <- sum(chi)
chi_final
chisq.test(obs, exp, correct = F)
chisq.test(c(65, 370, 565), c(63, 375, 562), correct = F)
pchisq(0.146)
pchisq(0.146, df = 1)
pchisq(0.146, df = 2)
pchisq(0.146, df = 1)
pchisq(0.146, df = 1, lower.tail = F)
pchisq(chi_final, df = 1, lower.tail = F)
chi <- (exp - obs) ^ 2 / exp
# Control 1
obs <- c(814, 172, 14)
exp <- c(810, 180, 10)
chi <- (exp - obs) ^ 2 / exp
chi_final <- sum(chi)
chi
# Control 1
obs <- c(814, 172, 14)
exp <- c(810, 180, 10)
chi <- (exp - obs) ^ 2 / exp
chi_final <- sum(chi)
pchisq(chi_final, df = 1, lower.tail = F)
chi
chi_final
pchisq(chi_final, df = 1, lower.tail = F)
0.8675 ^2 * 1000
(760 * 2 + 215) / 2000
2 * 0.8675 * 0.1325 * 1000
0.1325 ^ 2 * 1000
exp <- c(752.5563, 229.8875, 17.55625)
# Control 2
obs <- c(760, 215, 25)
exp <- c(752.5563, 229.8875, 17.55625)
chi <- (exp - obs) ^ 2 / exp
chi_final <- sum(chi)
chi
chi_final
pchisq(chi_final, df = 1, lower.tail = F)
0.4 /100
84/1400/0.004
# Qn 7
df <- data.frame(AA = c(220, 814), AG = c(69, 172), GG = c(11, 14), row.names = c("case", "control"))
df
tibble(df)
lapply(df, sum)
chisq.test
chisq.test(df)
chisq.test(df, correct = F)
test <- chisq.test(df, correct = F)
test$statistic
test$observed
test$expected
round(test$expected, 2)
round(apply(test$expected, 1, sum), 2)
round(apply(test$expected, 2, sum), 2)
exp <- test$statistic
(exp - df)^2/exp
exp
exp <- test$expected
(exp - df)^2/exp
sum((exp - df)^2/exp)
(241/ (1034 + 25)) / (1034 / (241 + 25))
(25/ (1034 + 241)) / (1034 / (241 + 25))
69/220 / 172/814
(69/220) / (172/814)
(11/220) / (14/814)
1.48^2
10/100
0.8675 ^ 2 * 1000
1034/1300 * 300
(814 * 2 + 172) / 2000 = 0.9
(814 * 2 + 172) / 2000
814 +172 + 14
# Qn 7
df <- data.frame(AA = c(220, 814), AG = c(69, 172), GG = c(11, 14), row.names = c("case", "control"))
df
chisq.test(df)
chisq.test(df, correct = F)
savings <- 0
for (i in seq(5)) {
savings <- savings + 20000
savings * 1.1
}
savings <- 0
for (i in seq(5)) {
savings <- savings + 20000
savings <- savings * 1.1
}
savings
savings <- 0
for (i in seq(10)) {
savings <- savings + 20000
savings <- savings * 1.1
}
savings
savings <- 0
for (i in seq(10)) {
savings <- savings + 20000
savings <- savings * 1.1
}
savings
for (i in seq(20)) {
savings <- savings + 20000
savings <- savings * 1.1
}
savings <- 0
for (i in seq(20)) {
savings <- savings + 20000
savings <- savings * 1.1
}
savings
savings <- 0
for (i in seq(15)) {
savings <- savings + 20000
savings <- savings * 1.1
}
savings
5.5 * 12
savings <- 0
income <- 12 * 9000
for (i in seq(15)) {
savings <- savings + income
savings <- savings * 1.1
}
savings
savings <- 0
income <- 12 * 9000
for (i in seq(5)) {
savings <- savings + income
savings <- savings * 1.1
}
savings
income <- 12 * 9000 * 1/3
savings <- 0
income <- 12 * 9000 * 1/3
for (i in seq(5)) {
savings <- savings + income
savings <- savings * 1.1
}
savings
savings <- 0
income <- 12 * 9000 * 1/3
for (i in seq(10)) {
savings <- savings + income
savings <- savings * 1.1
}
savings
savings <- 0
income <- 12 * 5 * 1/3
for (i in seq(6)) {
savings <- savings + income
savings <- savings * 1.1
}
savings
savings <- 0
income <- 12 * 5000 * 1/3
for (i in seq(6)) {
savings <- savings + income
savings <- savings * 1.1
}
savings
5000 * 1/3
savings <- 0
income <- 12 * 5000 * 1/3
for (i in seq(6)) {
savings <- savings + income
savings <- savings * 1.05
}
savings
c(430, 330, 418, 325, 530)
sum(c(430, 330, 418, 325, 530))
i <- 1000
final <- 0
for (x in seq(50)) {
final <- final + 1000
final <- final * 1.05
}
final
72/5
14 *4
14 *5.25
72/5
72/5.25
13.7 *4
13.7 * 2
final <- 10000
for (x in seq(14)) {
final <- final * 1.05
}
final
fastqc
fastqcr
require(fastqcr)
version(fastqcr)
packageVersion("fastqc")
packageVersion("fastqcr")
packageVersion("vegan")
?pcoa
?vegan::pcoa
?ape::pcoa
?vega::vegdist
?vegan::vegdist
packageVersion("Rtsne")
packageVersion("ape")
rtsne
Rtsne::rtsne
?Rtsne::rtsne
?Rtsne::tsne
?Rtsne::Rtsne
kmeans
?kmeans
packageVersion("stats")
?kmeans
getwd()
setwd("../Desktop/git_repos/blood_microbiome/data/")
require(data.table)
require(tidyverse)
df <- fread("SG10K_Health_metadata.n10714.16March2021.txt")
head(df)
View(df)
require(data.table)
require(tidyverse)
require(ggplot2)
df <- fread("SG10K_Health_metadata.n10714.16March2021.txt")
df
filt <- df %>%
select(Ethnicity, "Supplied gender", "Extraction kit", "Year of birth",
"Extraction date", "Plate position", "Plate ID", "Designed cov",
"CREATED_BY", "PROJECT_ID", "Library prep kit",
"Instrument ID") %>%
mutate(across(everything(), ~replace(., . == "", "unknown")))
colnames(df)
filt <- df %>%
select("Self ReportedEthnicity", "Supplied gender", "Extraction kit", "Year of birth",
"Extraction date", "Plate position", "Plate ID", "Designed cov",
"CREATED_BY", "PROJECT_ID", "Library prep kit",
"Instrument ID") %>%
mutate(across(everything(), ~replace(., . == "", "unknown")))
filt <- df %>%
select("Self Reported Ethnicity", "Supplied gender", "Extraction kit", "Year of birth",
"Extraction date", "Plate position", "Plate ID", "Designed cov",
"CREATED_BY", "PROJECT_ID", "Library prep kit",
"Instrument ID") %>%
mutate(across(everything(), ~replace(., . == "", "unknown")))
filt <- df %>%
select("Self Reported Ethnicity", "Supplied Gender", "Extraction kit", "Year of birth",
"Extraction date", "Plate position", "Plate ID", "Designed cov",
"CREATED_BY", "PROJECT_ID", "Library prep kit",
"Instrument ID") %>%
mutate(across(everything(), ~replace(., . == "", "unknown")))
filt <- df %>%
select("Self Reported Ethnicity", "Supplied Gender", "Extraction Kit", "Year of birth",
"Extraction date", "Plate position", "Plate ID", "Designed cov",
"CREATED_BY", "PROJECT_ID", "Library prep kit",
"Instrument ID") %>%
mutate(across(everything(), ~replace(., . == "", "unknown")))
filt <- df %>%
select("Self Reported Ethnicity", "Supplied Gender", "Extraction Kit", "Year of Birth",
"Extraction date", "Plate position", "Plate ID", "Designed cov",
"CREATED_BY", "PROJECT_ID", "Library prep kit",
"Instrument ID") %>%
mutate(across(everything(), ~replace(., . == "", "unknown")))
filt <- df %>%
select("Self Reported Ethnicity", "Supplied Gender", "Extraction Kit", "Year Of Birth",
"Extraction date", "Plate position", "Plate ID", "Designed cov",
"CREATED_BY", "PROJECT_ID", "Library prep kit",
"Instrument ID") %>%
mutate(across(everything(), ~replace(., . == "", "unknown")))
filt <- df %>%
select("Self Reported Ethnicity", "Supplied Gender", "Extraction Kit", "Year Of Birth",
"Extraction Date", "Plate position", "Plate ID", "Designed cov",
"CREATED_BY", "PROJECT_ID", "Library prep kit",
"Instrument ID") %>%
mutate(across(everything(), ~replace(., . == "", "unknown")))
filt <- df %>%
mutate(across(everything(), ~replace(., . == "", "unknown")))
col_list <- apply(filt, 2, table)
fig_list <- list()
for (i in seq(length(col_list))) {
col <- col_list[[i]]
col_name <- names(col_list)[i]
temp <- data.table(col) %>%
mutate(V1 = str_trunc(V1, 10, "left")) %>%
ggplot(aes(x = V1, y = N, fill = V1)) +
geom_bar(stat = "identity") +
geom_text(aes(label = N)) +
labs(x = col_name, y = "Frequency") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "none")
fig_list[[i]] <- temp
}
require(data.table)
require(tidyverse)
require(ggplot2)
df <- fread("SG10K_Health_metadata.n10714.16March2021.txt")
df
filt <- df %>%
mutate(across(everything(), ~replace(., . == "", "unknown")))
col_list <- apply(filt, 2, table)
fig_list <- list()
for (i in seq(length(col_list))) {
col <- col_list[[i]]
col_name <- names(col_list)[i]
temp <- data.table(col) %>%
mutate(V1 = str_trunc(V1, 10, "left")) %>%
ggplot(aes(x = V1, y = N, fill = V1)) +
geom_bar(stat = "identity") +
geom_text(aes(label = N)) +
labs(x = col_name, y = "Frequency") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "none")
fig_list[[i]] <- temp
}
plt <- egg::ggarrange(plots = fig_list, nrow = 4, ncol = 3)
colnames(df)
columns <- colnames(df)
unique(df$`CRAM Files Location`)
unique(df$`GIS Internal Sample ID`)
length(unique(df$`GIS Internal Sample ID`))
length(unique(df$`NPM Research ID`))
unique(df$`Site Supplying Sample`)
table(df$`Sequencing Depth`)
df$`Multiplex Pool ID`
mux <- df$`Multiplex Pool ID`
mux[mux != ""]
length(mux[mux != ""])
df$`NPM Research ID`
length(df$`NPM Research ID`)
